@page "/user"
@using IMSClassLibrary.Models;
@using IMSClassLibrary.Repos;
@using IMS.Pages;
@inject UserRepository userRepository
@inject DepartmentRepository departmentRepository
@inject ModuleRepository moduleRepository
@inject Authorisation authorisation
@inject NotificationService NotificationService;
@inject NavigationManager UriHelper
@inject IHttpContextAccessor httpContextAccessor;
@using IMSClassLibrary.Context;
@using Microsoft.EntityFrameworkCore
@inject IServiceProvider ServiceProvider


<PageTitle>Users</PageTitle>
<br />
<div class="container-fluid">
    <div class="page-breadcrumb d-none d-sm-flex align-items-center mb-3">
        <div class="breadcrumb-title pe-3"><h2>Users</h2></div>
        <div class="ms-auto">
            <div class="btn-group">
                <button class="btn btn-primary" @onclick="ShowModal" type="button" data-bs-toggle="modal" data-bs-target="#exampleModallogin">Add</button>
            </div>
        </div>
    </div>
        <div class="modal fade" id="exampleModallogin" tabindex="-1" role="dialog" aria-labelledby="exampleModallogin" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content dark-sign-up">
                    <div class="modal-body social-profile text-start">
                        <div class="modal-toggle-wrapper">

                            <h3>Add User </h3>
                            <p>
                                Fill in your information below.
                            </p>
                            <EditForm Model="@user" OnValidSubmit="saveUser" class="row g-3">

                                <div class="modal-body">
                                    <DataAnnotationsValidator />
                                    <ValidationSummary />

                                    <div class="col-md-12">
                                        <label>First Name</label>
                                        <InputText @bind-Value="user.FirstName" class="form-control" placeholder="Enter First Name here" />
                                    </div>

                                    <div class="col-md-12">
                                        <label>Last Name</label>
                                        <InputText @bind-Value="user.LastName" class="form-control" placeholder="Enter Last name here" />
                                    </div>

                                    <div class="col-md-12">
                                        <label>Nrc</label>
                                        <InputText @bind-Value="user.Nrc" class="form-control" placeholder="Enter NRC Number here" />
                                    </div>
                                    <div class="col-md-12"> 
                                        <label>Password</label>
                                        <InputText @bind-Value="user.Password" type="password" class="form-control" placeholder="Enter Password here" /> 
                                    </div>
                                    <div class="col-md-12">
                                        <label>Email</label>
                                        <InputText type="email" @bind-Value="user.Email" class="form-control" placeholder="Enter Email here" />
                                    </div>
                                    <div class="col-md-12">
                                        <label for="deptname" class="form-label">Department Name</label>
                                        <InputSelect id="deptname" class="form-control" @bind-Value="user.DepartmentName">
                                            <option value="" disabled>Select Department</option>
                                            @foreach (var dept in departmentList)
                                            {
                                                <option value="@dept">@dept</option>
                                            }
                                        </InputSelect>
                                        <ValidationMessage For="@(() => user.DepartmentName)" />

                                    </div>
                                    <div class="col-md-12">
                                        <label>Address</label> 
                                        <InputText @bind-Value="user.Address" class="form-control" placeholder="Enter Address here" /> 
                                    </div>

                                   
                                    <div class="col-12">
                                    <button class="btn btn-primary" type="submit" data-bs-dismiss="modal">Submit </button>
                                </div>
                                </div>
                            </EditForm>
                        </div>
                    </div>
                </div> 
            </div>
        </div>

    </div>

<!--end breadcrumb-->

<div class="col-sm-12">
    <div class="card">
        <div class="card-header">
            <h4>Users</h4>
        </div>
        <div class="table-responsive custom-scrollbar">
            <table class="table">
                <thead>
                    <tr class="border-bottom-primary">
                        <th scope="col">#</th>
                        <th scope="col">First Name</th>
                        <th scope="col">Last Name</th>
                        <th scope="col">Email</th>
                        <th scope="col">Department</th>
                        <th scope="col">NRC</th>
                        <th scope="col">Address</th>

                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int count = 1;
                    }
                    @foreach (var usr in users)
                    {
                        <tr>
                            <td>@count</td>
                            <td>@usr.FirstName</td>
                            <td>@usr.LastName</td>
                            <td>@usr.Email </td>
                            <td>@usr.DepartmentName</td>
                            <td>@usr.Nrc</td>
                            <td>@usr.Address</td>


                            <td>
                                <a href="#" title="Edit" @onclick="@(()=>editUser(usr))" class="edit">
                                    <i data-feather="edit-3"></i>
                                </a>
                                <a href="#" title="Delete" @onclick="@(()=>deleteUser(usr))" class="delete" data-bs-toggle="modal" data-bs-target="#exampleModallogin2">
                                    <i data-feather="trash-2"></i>
                                </a>
                            </td>
                        </tr>
                        count++;
                    }
                </tbody>

            </table>
        </div>
    </div>
</div>





  <div class="modal fade" id="exampleModallogin2" tabindex="-1" role="dialog" aria-labelledby="exampleModallogin2" aria-hidden="true">
       <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content dark-sign-up">

                    <div class="modal-toggle-wrapper">
                <h5 class="modal-title" id="exampleModalLongTitle"> <i class="lni lni-trash"></i> Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body social-profile text-start">
                <label>Are you sure you want to delete this User?</label>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><i class="lni lni-close"></i> Close</button>
                    <button @onclick="completeDelete" type="button" class="btn btn-danger" data-bs-dismiss="modal"><i class="lni lni-trash"></i> Delete</button>
            </div>
        </div>
    </div>
</div>






    <!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModal" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content dark-sign-up">
                <div class="modal-body social-profile text-start">
                    <div class="modal-toggle-wrapper">
                        <h3>Edit User</h3>
                        <p>Update your information below.</p>
                    <EditForm Model="@user" OnValidSubmit="updateUser" class="row g-3">
                            <div class="col-md-12">
                                <label for="editName" class="form-label">User Name</label>
                                <InputText id="editName" required class="form-control" @bind-Value="user.Name" />
                            </div>
                            <div class="col-12">
                                <button class="btn btn-primary" type="submit" data-bs-dismiss="modal">Update</button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>






@code {
    
    private List<User> users = new List<User>();
    private string modalTitle = "Add User";
    private SystemDbContext _context;
    private List<string> departmentList = new List<string>();

    private UserRepository _userRepository;
    private User user = new User()
        {
            CreatedBy = "Admin",
            ModifiedBy = "Admin ",
            Status = "Active"


        };
    protected override void OnInitialized() { 
        base.OnInitialized();
        InitializeDbContext();
        LoadUsers();
        
    }

    private void InitializeDbContext() {
        _context = ServiceProvider.GetRequiredService<SystemDbContext>();
        _userRepository = new UserRepository(_context);
    }

    private void LoadUsers()
    {
        Console.WriteLine("am up");
        try
        {
            users = _userRepository.GetAll();
        }
        catch (Exception ex)
        {
            // Handle error (e.g., show a message to the user)
            Console.WriteLine(ex.Message); 
        } 
    }

    private async Task HandleValidSubmit()
    {
        await _userRepository.AddAsync(user); // Call the service method

    }

    private void saveUser()
    {
        user = _userRepository.Add(user);
        LoadUsers();
        Console.WriteLine("yoooo");
        ResetForm();
    }

    private void editUser(User usr)
    {
        user = usr; // Load the selected user details into the modal
    }

    private void ResetForm()
    {
        user = new User();
        modalTitle = "Add User";
    }

    private void deleteUser(User usr)
    {
        user = usr; 
    }

    private void completeDelete()
    {
        try
        {
            if (_userRepository.DeleteById(user.Id))
            {
               
                ResetForm();
                LoadUsers();
            }
        }
        catch (Exception ex)
        {
            // Handle error (e.g., show a message to the user)
            Console.WriteLine(ex.Message);
        }
    }
    private void updateUser()
    { // Logic to update the user details 
        userRepository.Update(user);
        ResetForm();
        // Update the UI or refresh the user list
         }


    private void LoadDepartments()
    {
        // Fetch the list of departments from your repository or context
        departmentList = departmentRepository.GetAll().Select(d => d.Name).ToList();
    }

}
