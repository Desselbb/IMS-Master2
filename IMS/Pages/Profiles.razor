@page "/profiles"
@using IMSClassLibrary.Models;
@using IMSClassLibrary.Repos;
@using IMS.Pages;
@inject UserRepository userRepository
@inject ProfileRepository profileRepository
@inject ModuleRepository moduleRepository
@inject Authorisation authorisation
@inject NotificationService NotificationService;
@inject NavigationManager UriHelper
@inject IHttpContextAccessor httpContextAccessor;
@using IMSClassLibrary.Context;
@using Microsoft.EntityFrameworkCore
@inject IServiceProvider ServiceProvider
@inject IJSRuntime js

<PageTitle>Profiles</PageTitle>
<br />
<div class="container-fluid">
    <div class="page-breadcrumb d-none d-sm-flex align-items-center mb-3">
        <div class="breadcrumb-title pe-3"><h2>Profiles</h2></div>
        <div class="ms-auto">
            <div class="btn-group">
                <button class="btn btn-primary" @onclick="ShowModal" type="button" data-bs-toggle="modal" data-bs-target="#exampleModallogin">Add</button>
            </div>
        </div>
    </div>

    <!-- Add Modal -->
    <div class="modal fade" id="exampleModallogin" tabindex="-1" role="dialog" aria-labelledby="exampleModallogin" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content dark-sign-up">
                <div class="modal-body social-profile text-start">
                    <div class="modal-toggle-wrapper">
                        <h3>Add Profile</h3>
                        <p>Fill in your information below.</p>
                        <EditForm Model="@profile" OnValidSubmit="saveProfile" class="row g-3">
                            <DataAnnotationsValidator />
                            <ValidationSummary />
                            <div class="col-md-12">
                                <label for="name" class="form-label">Profile Name</label>
                                <InputText id="name" required class="form-control" @bind-Value="profile.Name" />
                                <ValidationMessage For="@(() => profile.Name)" />
                            </div>
                            <div class="col-12">
                                <button class="btn btn-primary" type="submit" data-bs-dismiss="modal">Submit</button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Profiles Table -->
    <div class="col-sm-12">
        <div class="table-responsive mt-4 mt-xl-0">
            <table class="table table-success table-striped table-nowrap align-middle mb-0">
                <thead>
                    <tr class="border-bottom-primary">
                        <th scope="col">Id</th>
                        <th scope="col">Name</th>
                        <th scope="col">Status</th>
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int count = 1;
                    }
                    @foreach (var prof in profiles)
                    {
                        <tr class="border-bottom-success">
                            <td>@count</td>
                            <td>@prof.Name</td>
                            <td>@prof.Status</td>
                            <td>
                                <a href="#" title="Edit" @onclick="@(() => editProfile(prof))" class="edit" data-bs-toggle="modal" data-bs-target="#editModal">
                                    <i class="fa-solid fa-pencil"></i>
                                </a>
                                <a href="#" title="Delete" @onclick="@(() => deleteProfile(prof))" class="delete" data-bs-toggle="modal" data-bs-target="#exampleModallogin2">
                                    <i class="fa-regular fa-trash-can"></i>
                                </a>
                            </td>
                        </tr>
                        count++;
                    }
                </tbody>
            </table>
        </div>
    </div>





    <div class="modal fade" id="exampleModallogin2" tabindex="-1" role="dialog" aria-labelledby="exampleModallogin2" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content dark-sign-up">

                <div class="modal-toggle-wrapper">
                    <h5 class="modal-title" id="exampleModalLongTitle"> <i class="lni lni-trash"></i> Delete</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body social-profile text-start">
                    <label>Are you sure you want to delete this Profile?</label>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><i class="lni lni-close"></i> Close</button>
                    <button @onclick="completeDelete" type="button" class="btn btn-danger" data-bs-dismiss="modal"><i class="lni lni-trash"></i> Delete</button>
                </div>
            </div>
        </div>
    </div>


</div>



<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content dark-sign-up">
            <div class="modal-body social-profile text-start">
                <div class="modal-toggle-wrapper">
                    <h3>Edit Profile</h3>
                    <p>Update your information below.</p>
                    <EditForm Model="@profile" OnValidSubmit="updateProfile" class="row g-3">
                        <div class="col-md-12">
                            <label for="editName" class="form-label">Profile Name</label>
                            <InputText id="editName" required class="form-control" @bind-Value="profile.Name" />
                        </div>
                        <div class="col-12">
                            <button class="btn btn-primary" type="submit" data-bs-dismiss="modal">Update</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>






@code {

    private List<Profile> profiles = new List<Profile>();
    private string modalTitle = "Add Profile";
    private SystemDbContext _context;


    private ProfileRepository _profileRepository;
    private Profile profile = new Profile()
        {
            CreatedBy = "Admin",
            ModifiedBy = "Admin ",
            Status = "Active"


        };
    protected override void OnInitialized()
    {
        base.OnInitialized();
        InitializeDbContext();
        LoadProfiles();

    }

    private void InitializeDbContext()
    {
        _context = ServiceProvider.GetRequiredService<SystemDbContext>();
        _profileRepository = new ProfileRepository(_context);
    }

    private void LoadProfiles()
    {
        Console.WriteLine("am up");
        try
        {
            profiles = _profileRepository.GetAll();
        }
        catch (Exception ex)
        {
            // Handle error (e.g., show a message to the user)
            Console.WriteLine(ex.Message);
        }
    }

    private async Task HandleValidSubmit()
    {
        await _profileRepository.AddAsync(profile); // Call the service method

    }

    private void saveProfile()
    {
        profile = _profileRepository.Add(profile);
        LoadProfiles();
        Console.WriteLine("ive saved the profile");
        ResetForm();
    }

    private void editProfile(Profile profi)
    {
        profile = profi; // Load the selected profile details into the modal
    }

    private void ResetForm()
    {
        profile = new Profile();
        modalTitle = "Add Profile";
    }

    private void deleteProfile(Profile profi)
    {
        profile = profi;
    }

    private void completeDelete()
    {
        try
        {
            if (_profileRepository.DeleteById(profile.Id))
            {

                ResetForm();
                LoadProfiles();
            }
        }
        catch (Exception ex)
        {
            // Handle error (e.g., show a message to the user)
            Console.WriteLine(ex.Message);
        }
    }
    private void updateProfile()
    { // Logic to update the profile details
        profileRepository.Update(profile);
        ResetForm();
        // Update the UI or refresh the profile list
    }

    private void ShowModal()
    {
        // Use JavaScript interop to show the modal
        js.InvokeVoidAsync("$('#exampleModallogin').modal", "show");
    }

    private void ShowModal2()
    {
        // Use JavaScript interop to show the modal
        js.InvokeVoidAsync("$('#exampleModallogin2').modal", "show");
    }

    private void CloseModal(string modalId)
    {
        js.InvokeVoidAsync($"$('#{modalId}').modal", "hide");
    }
}
