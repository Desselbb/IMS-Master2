@page "/users"
@using IMSClassLibrary.Models;
@using IMSClassLibrary.Repos;
@using IMS.Pages;
@inject UserRepository userRepository
@inject DepartmentRepository departmentRepository
@inject ModuleRepository moduleRepository
@inject Authorisation authorisation
@inject NotificationService NotificationService;
@inject NavigationManager UriHelper
@inject IHttpContextAccessor httpContextAccessor;
@using IMSClassLibrary.Context;
@using Microsoft.EntityFrameworkCore
@inject IServiceProvider ServiceProvider
@inject IJSRuntime js

<PageTitle>Departments</PageTitle>
<br />
<div class="container-fluid">
    <div class="page-breadcrumb d-none d-sm-flex align-items-center mb-3">
        <div class="breadcrumb-title pe-3"><h2>Users</h2></div>
        <div class="ms-auto">
            <div class="btn-group">
                <button class="btn btn-primary" @onclick="ShowModal" type="button" data-bs-toggle="modal" data-bs-target="#exampleModallogin">Add</button>
            </div>
        </div>
    </div>

    <!-- Add Modal -->
    <div class="modal fade" id="exampleModallogin" tabindex="-1" role="dialog" aria-labelledby="exampleModallogin" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content dark-sign-up">
                <div class="modal-body social-profile text-start">
                    <div class="modal-toggle-wrapper">
                        <h3>Add Department</h3>
                        <p>Fill in your information below.</p>
                        <EditForm Model="@user" OnValidSubmit="saveUser" class="row g-3">
                            <DataAnnotationsValidator />
                            <ValidationSummary />

                            <div class="col-md-12">
                                <label>First Name</label>
                                <InputText @bind-Value="user.FirstName" class="form-control" placeholder="Enter First Name here" />
                                <ValidationMessage For="@(() => user.FirstName)" />
                            </div>

                            <div class="col-md-12">
                                <label>Last Name</label>
                                <InputText @bind-Value="user.LastName" class="form-control" placeholder="Enter Last Name here" />
                                <ValidationMessage For="@(() => user.LastName)" />
                            </div>

                            <div class="col-md-12">
                                <label>NRC</label>
                                <InputText @bind-Value="user.Nrc" class="form-control" placeholder="Enter NRC Number here" />
                                <ValidationMessage For="@(() => user.Nrc)" />
                            </div>

                            <div class="col-md-12">
                                <label>Password</label>
                                <InputText @bind-Value="user.Password" type="password" class="form-control" placeholder="Enter Password here" />
                                <ValidationMessage For="@(() => user.Password)" />
                            </div>

                            <div class="col-md-12">
                                <label>Email</label>
                                <InputText type="email" @bind-Value="user.Email" class="form-control" placeholder="Enter Email here" />
                                <ValidationMessage For="@(() => user.Email)" />
                            </div>

                            <div class="col-md-12">
                                <label for="deptname" class="form-label">Department Name</label>
                                <InputSelect id="deptname" class="form-control" @bind-Value="user.DepartmentName">
                                    <option value="" disabled>Select Department</option>
                                    @foreach (var dept in departmentList)
                                    {
                                        <option value="@dept">@dept</option>
                                    }
                                </InputSelect>
                                <ValidationMessage For="@(() => user.DepartmentName)" />
                            </div>

                            <div class="col-md-12">
                                <label>Address</label>
                                <InputText @bind-Value="user.Address" class="form-control" placeholder="Enter Address here" />
                                <ValidationMessage For="@(() => user.Address)" />
                            </div>

                            <div class="col-md-12">
                                <label for="imageUpload" class="form-label">Upload Image</label>
                                <InputFile @bind-Value="user.ImagePath" OnChange="HandleFileSelected" />
                                <ValidationMessage For="@(() => user.ImagePath)" />

                            </div>

                            <div class="col-12">
                                <button class="btn btn-primary" type="submit" data-bs-dismiss="modal">Submit</button>
                            </div>
                        </EditForm>

                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Users Table -->
    <div class="col-sm-12">
        <div class="table-responsive mt-4 mt-xl-0">
            <table class="table table-success table-striped table-nowrap align-middle mb-0">
                <thead>
                    <tr class="border-bottom-primary">
                        <th scope="col">#</th>
                        <th scope="col">First Name</th>
                        <th scope="col">Last Name</th>
                        <th scope="col">Email</th>
                        <th scope="col">Department</th>
                        <th scope="col">NRC</th>
                        <th scope="col">Address</th>

                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int count = 1;
                    }
                    @foreach (var usr in users)
                    {
                        <tr class="border-bottom-success">
                            <td>@count</td>
                            <td>@usr.FirstName</td>
                            <td>@usr.LastName</td>
                            <td>@usr.Email </td>
                            <td>@usr.DepartmentName</td>
                            <td>@usr.Nrc</td>
                            <td>@usr.Address</td>
                            <td>
                                <a href="#" title="Edit" @onclick="@(() => editUser(usr))" class="edit" data-bs-toggle="modal" data-bs-target="#editModal">
                                    <i class="fa-solid fa-pencil"></i>
                                </a>
                                <a href="#" title="Delete" @onclick="@(() => deleteUser(usr))" class="delete" data-bs-toggle="modal" data-bs-target="#exampleModallogin2">
                                    <i class="fa-regular fa-trash-can"></i>
                                </a>
                            </td>
                        </tr>
                        count++;
                    }
                </tbody>
            </table>
        </div>
    </div>





    <div class="modal fade" id="exampleModallogin2" tabindex="-1" role="dialog" aria-labelledby="exampleModallogin2" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content dark-sign-up">

                <div class="modal-toggle-wrapper">
                    <h5 class="modal-title" id="exampleModalLongTitle"> <i class="lni lni-trash"></i> Delete</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body social-profile text-start">
                    <label>Are you sure you want to delete this Department?</label>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><i class="lni lni-close"></i> Close</button>
                    <button @onclick="completeDelete" type="button" class="btn btn-danger" data-bs-dismiss="modal"><i class="lni lni-trash"></i> Delete</button>
                </div>
            </div>
        </div>
    </div>


</div>



<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content dark-sign-up">
            <div class="modal-body social-profile text-start">
                <div class="modal-toggle-wrapper">
                    <h3>Edit Department</h3>
                    <p>Update your information below.</p>

                    <EditForm Model="@user" OnValidSubmit="updateUser" class="row g-3">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="col-md-12">
                            <label>First Name</label>
                            <InputText @bind-Value="user.FirstName" class="form-control" placeholder="Enter First Name here" />
                            <ValidationMessage For="@(() => user.FirstName)" />
                        </div>

                        <div class="col-md-12">
                            <label>Last Name</label>
                            <InputText @bind-Value="user.LastName" class="form-control" placeholder="Enter Last Name here" />
                            <ValidationMessage For="@(() => user.LastName)" />
                        </div>

                        <div class="col-md-12">
                            <label>NRC</label>
                            <InputText @bind-Value="user.Nrc" class="form-control" placeholder="Enter NRC Number here" />
                            <ValidationMessage For="@(() => user.Nrc)" />
                        </div>

                        <div class="col-md-12">
                            <label>Password</label>
                            <InputText @bind-Value="user.Password" type="password" class="form-control" placeholder="Enter Password here" />
                            <ValidationMessage For="@(() => user.Password)" />
                        </div>

                        <div class="col-md-12">
                            <label>Email</label>
                            <InputText type="email" @bind-Value="user.Email" class="form-control" placeholder="Enter Email here" />
                            <ValidationMessage For="@(() => user.Email)" />
                        </div>

                        <div class="col-md-12">
                            <label for="deptname" class="form-label">Department Name</label>
                            <InputSelect id="deptname" class="form-control" @bind-Value="user.DepartmentName">
                                <option value="" disabled>Select Department</option>
                                @foreach (var dept in departmentList)
                                {
                                    <option value="@dept">@dept</option>
                                }
                            </InputSelect>
                            <ValidationMessage For="@(() => user.DepartmentName)" />
                        </div>

                        <div class="col-md-12">
                            <label>Address</label>
                            <InputText @bind-Value="user.Address" class="form-control" placeholder="Enter Address here" />
                            <ValidationMessage For="@(() => user.Address)" />
                        </div>

                        <div class="col-md-12"> 
                            <label for="imageUpload" class="form-label">Upload Image</label>
                            <InputFile OnChange="HandleFileSelected" /> 
                            <ValidationMessage For="@(() => user.ImagePath)" /> 

                         </div>

                        <div class="col-12">
                            <button class="btn btn-primary" type="submit" data-bs-dismiss="modal">Submit</button>
                        </div>
                    </EditForm>

                </div>
            </div>
        </div>
    </div>
</div>







@code {

    private List<User> users = new List<User>();
    private string modalTitle = "Add User";
    private SystemDbContext _context;
    private List<string> departmentList = new List<string>();


    private UserRepository _userRepository;
    private User user = new User()
        {
            CreatedBy = "Admin",
            ModifiedBy = "Admin ",
            Status = "Active"


        };
    protected override void OnInitialized()
    {
        base.OnInitialized();
        InitializeDbContext();
        LoadUsers();
        LoadDepartments();

    }

    private void InitializeDbContext()
    {
        _context = ServiceProvider.GetRequiredService<SystemDbContext>();
        _userRepository = new UserRepository(_context);
    }

    private void LoadUsers()
    {
        Console.WriteLine("am up");
        try
        {
            users = _userRepository.GetAll();
        }
        catch (Exception ex)
        {
            // Handle error (e.g., show a message to the user)
            Console.WriteLine(ex.Message);
        }
    }
    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        var file = e.File; var filePath = Path.Combine("wwwroot/images", file.Name);
        // Create directory if not exists 
        if (!Directory.Exists("wwwroot/images"))
          { 
              Directory.CreateDirectory("wwwroot/images");
            Console.WriteLine("ive added picture");
          }
          // Save the file to the specified path 

          using (var stream = new FileStream(filePath, FileMode.Create)) {
              await file.OpenReadStream().CopyToAsync(stream); 
          }

          // Set the ImagePath property to the path of the saved file 
          user.ImagePath = $"images/{file.Name}";
      }

    private async Task HandleValidSubmit()
    {
        await _userRepository.AddAsync(user); // Call the service method

    }

    private void saveUser()
    {
        user = _userRepository.Add(user);
        LoadUsers();
        Console.WriteLine("yoooo");
        ResetForm();
    }

    private void editUser(User usr)
    {
        user = usr; // Load the selected user details into the modal
        Console.WriteLine("ive edited");
    }

    private void ResetForm()
    {
        user = new User();
        modalTitle = "Add User";
    }

    private void deleteUser(User usr)
    {
        user = usr;
        Console.WriteLine("ive deleted");
    }

    private void completeDelete()
    {
        try
        {
            if (_userRepository.DeleteById(user.Id))
            {

                ResetForm();
                LoadUsers();
            }
        }
        catch (Exception ex)
        {
            // Handle error (e.g., show a message to the user)
            Console.WriteLine(ex.Message);
        }
    }
    private void updateUser()
    { // Logic to update the user details
        userRepository.Update(user);
        ResetForm();
        // Update the UI or refresh the user list
    }
    private void LoadDepartments()
    {
        // Fetch the list of departments from your repository or context
        departmentList = departmentRepository.GetAll().Select(d => d.Name).ToList();
    }

    private void ShowModal()
    {
        // Use JavaScript interop to show the modal
        js.InvokeVoidAsync("$('#exampleModallogin').modal", "show");
    }

    private void ShowModal2()
    {
        // Use JavaScript interop to show the modal
        js.InvokeVoidAsync("$('#exampleModallogin2').modal", "show");
    }

    private void CloseModal(string modalId)
    {
        js.InvokeVoidAsync($"$('#{modalId}').modal", "hide");
    }
}
